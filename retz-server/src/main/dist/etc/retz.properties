## Mesos host name and port
retz.mesos = localhost:5050
## Misc to register as a framework
## retz.mesos.role = retz
## retz.mesos.principal = retz
## retz.mesos.secret.file =
## Set GPU_RESOURCES and register as GPU-enabled framework
## retz.gpu = false

## A URL and port number to listen
retz.bind  = http://localhost:9090
## Authentication
retz.authentication = true
## Define admin key and secret
retz.access.key = deadbeef
retz.access.secret = cafebabe

## System Limits
## Limit of simultaneous job execution
## retz.max.running = 128
## retz.max.stock = 16

## Persistence: JDBC access URL
## H2 Database Example:
## retz.database.url = jdbc:h2:mem:retz-server;DB_CLOSE_DELAY=-1
## retz.database.driver = org.h2.Driver
## retz.database.user =
## retz.database.pass =
##
## Postgres Example: if there're no tables, Retz automatically creates then at startup
## retz.database.url = jdbc:postgresql://127.0.0.1:5432/retz
## retz.database.driver = org.postgresql.Driver
## retz.database.user = retz
## retz.database.pass = ba11ca3e

## If BIND_ADDRESS is for SSL, these will be used for both server and client
## retz.tls.keystore.file =
## retz.tls.keystore.pass =
## retz.tls.truststore.file =
## retz.tls.truststore.pass =
## retz.tls.insecure = false
